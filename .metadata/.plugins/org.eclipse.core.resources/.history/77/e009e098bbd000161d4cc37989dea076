import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.text.ParseException;
import java.util.Iterator;

import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;


public class Assignment_1 {
private static final String filePath = "E:\\java\\Assignment_1\\src\\main\\resources\\students.json";
	
	public static void main(String[] args) throws org.json.simple.parser.ParseException {

		try {
			// read the json file
			FileReader reader = new FileReader(filePath);

			JSONParser jsonParser = new JSONParser();
			JSONObject jsonObject = (JSONObject) jsonParser.parse(reader);

			// get an array from the JSON object
			JSONArray students= (JSONArray) jsonObject.get("students");
			
			// take the elements of the json array
			for(int i=0; i<students.size(); i++){
//				var studentObj = students.get(i);
//				Long id =  (Long) jsonObject.get("id");
//				System.out.println("The id is: " + id);
//				
//				String firstName = (String) jsonObject.get("fName");
//				System.out.println("The first name is: " + firstName);
//				
//				String lastName = (String) jsonObject.get("lName");
//				System.out.println("The last name is: " + lastName);
//				
//				Long score =  (Long) jsonObject.get("score");
//				System.out.println("The Score is: " + score);
				
				System.out.println("The " + i + " element of the array: "+students.get(i));
			}
			Iterator i = students.iterator();

			// take each value from the json array separately
			while (i.hasNext()) {
				JSONObject innerObj = (JSONObject) i.next();
				System.out.println("language "+ innerObj.get("lang") + 
						" with level " + innerObj.get("knowledge"));
			}
			// handle a structure into the json object
			JSONObject structure = (JSONObject) jsonObject.get("job");
			System.out.println("Into job structure, name: " + structure.get("name"));

		}
		catch (FileNotFoundException ex) {
			ex.printStackTrace();
		} catch (IOException ex) {
			ex.printStackTrace();
		}  catch (NullPointerException ex) {
			ex.printStackTrace();
		}

	}

}
